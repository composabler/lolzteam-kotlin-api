package me.topilov.data.accounts.vk

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.databind.annotation.JsonDeserialize
import me.topilov.data.accounts.*
import me.topilov.data.user.Seller
import me.topilov.deserializer.MapDeserializer

data class VkAccount(
    @JsonProperty("item_id") val id: Int,
    @JsonProperty("item_state") val state: AccountState,
    @JsonProperty("category_id") val categoryId: Int,
    @JsonProperty("published_date") val publishedDate: Long,
    @JsonProperty("title") val title: String,
    @JsonProperty("description") val description: String,
    @JsonProperty("price") val price: Int,
    @JsonProperty("update_stat_date") val updateStatDate: Long,
    @JsonProperty("refreshed_date") val refreshedDate: Long,
    @JsonProperty("view_count") val viewCount: Int,
    @JsonProperty("is_sticky") val isSticky: Boolean,
    @JsonProperty("item_origin") val origin: AccountOrigin,
    @JsonProperty("extended_guarantee") val extendedGuarantee: Boolean,
    @JsonProperty("nsb") val nsb: Int,
    @JsonProperty("allow_ask_discount") val allowAskDiscount: Boolean,
    @JsonProperty("title_en") val titleEn: String,
    @JsonProperty("description_en") val descriptionEn: String,
    @JsonProperty("email_type") val emailType: AccountEmailType?,
    @JsonProperty("is_reserved") val isReserved: Boolean,
    @JsonProperty("item_domain") val itemDomain: String,
    @JsonProperty("vk_item_id") val itemId: Int,
    @JsonProperty("vk_id_count") val ids: Int,
    @JsonProperty("vk_friend_count") val friends: Int,
    @JsonProperty("vk_follower_count") val followers: Int,
    @JsonDeserialize(using = MapDeserializer::class)
    @JsonProperty("vk_admin_groups") val adminGroups: Map<String, AdminGroup>,
    @JsonProperty("vk_max_group_follower_count") val maxGroupFollowers: Int,
    @JsonProperty("vk_vote_count") val votes: Int,
    @JsonProperty("vk_country") val country: String,
    @JsonProperty("vk_sex") val sex: Int,
    @JsonProperty("vk_mobile") val mobile: Boolean,
    @JsonProperty("vk_register_date") val registerDate: Long,
    @JsonProperty("vk_age") val age: Int,
    @JsonProperty("vk_city") val city: String,
    @JsonProperty("vk_email") val email: Boolean,
    @JsonProperty("vk_mobile_country") val mobileCountry: Int,
    @JsonProperty("vk_tfa") val tfa: Boolean,
    @JsonProperty("vk_is_closed") val isClosed: Boolean,
    @JsonProperty("vk_relation") val relation: Boolean,
    @JsonProperty("vk_count_conversations") val conversations: Int,
    @JsonProperty("user_group_id") val groupId: Int,
    @JsonProperty("secondary_group_ids") val secondaryGroupIds: String,
    @JsonProperty("isIgnored") val isIgnored: Boolean,
    @JsonProperty("canViewLoginData") val canViewLoginData: Boolean,
    @JsonProperty("canUpdateItemStats") val canUpdateItemStats: Boolean,
    @JsonProperty("showGetEmailCodeButton") val showGetEmailCodeButton: Boolean,
    @JsonProperty("canOpenItem") val canOpenItem: Boolean,
    @JsonProperty("canCloseItem") val canCloseItem: Boolean,
    @JsonProperty("canEditItem") val canEditItem: Boolean,
    @JsonProperty("canDeleteItem") val canDeleteItem: Boolean,
    @JsonProperty("canStickItem") val canStickItem: Boolean,
    @JsonProperty("canUnstickItem") val canUnstickItem: Boolean,
    @JsonProperty("bumpSettings") val bumpSettings: BumpSettings,
    @JsonProperty("canBumpItem") val canBumpItem: Boolean,
    @JsonProperty("canBuyItem") val canBuyItem: Boolean,
    @JsonProperty("rub_price") val rubPrice: Int,
    @JsonProperty("price_currency") val priceCurrency: String,
    @JsonProperty("canValidateAccount") val canValidateAccount: Boolean,
    @JsonProperty("canResellItemAfterPurchase") val canResellItemAfterPurchase: Boolean,
    @JsonProperty("vkMobileCountry") val mobileCountryPhrase: String,
    @JsonProperty("vk_sex_phrase") val sexPhrase: String,
    @JsonProperty("vk_relation_phrase") val relationPhrase: String,
    @JsonProperty("canViewAccountLink") val canViewAccountLink: Boolean,
    @JsonProperty("itemOriginPhrase") val itemOriginPhrase: String,
    @JsonProperty("sold_items_category_count") val soldItemsCategory: Int,
    @JsonProperty("restore_items_category_count") val restoreItemsCategory: Int,
    @JsonDeserialize(using = MapDeserializer::class)
    @JsonProperty("tags") val tags: Map<String, String>,
    @JsonProperty("note_text") val note: String?,
    @JsonProperty("in_cart") val inCart: Boolean,
    @JsonProperty("reserve") val reserve: Reserve,
    @JsonProperty("description_html") val descriptionHtml: String,
    @JsonProperty("description_html_en") val descriptionHtmlEn: String,
    @JsonProperty("seller") val seller: Seller,
)
